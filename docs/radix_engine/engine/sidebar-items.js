window.SIDEBAR_ITEMS = {"enum":[["ApplicationError",""],["AuthError",""],["CallFrameError",""],["ExecutionMode","Execution mode"],["ExistingMetaState",""],["IdAllocationError",""],["InterpreterError",""],["InvokeError","This enum is to help with designing intuitive error abstractions. Each engine module can have its own [`SelfError`], but can also wrap arbitrary downstream errors. Ultimately these errors get flattened out to a [`RuntimeError`] anyway."],["KernelError",""],["LockState",""],["ModuleError",""],["RENodeInit",""],["RENodeLocation",""],["RENodeVisibilityOrigin",""],["RejectionError","Represents an error which causes a tranasction to be rejected."],["RuntimeError","Represents an error when executing a transaction."],["ScryptoFnResolvingError",""],["SubstateMetaState",""],["SysCallInput",""],["SysCallOutput",""],["TrackError",""],["TrackedEvent",""],["TransactionResultType",""]],"fn":[["deref_and_update",""]],"mod":[["actor",""],["call_frame",""],["errors",""],["event",""],["heap",""],["id_allocator",""],["interpreters",""],["kernel",""],["modules",""],["node",""],["node_move_module",""],["node_properties",""],["system_api",""],["track",""]],"struct":[["AuthModule",""],["CallFrame","A call frame is the basic unit that forms a transaction call stack, which keeps track of the owned objects by this function."],["CallFrameUpdate",""],["Heap",""],["HeapRENode",""],["IdAllocator","An ID allocator defines how identities are generated."],["Kernel",""],["LoadedSubstate",""],["LockFlags",""],["LockInfo",""],["NopWasmRuntime","A `Nop` runtime accepts any external function calls by doing nothing and returning void."],["PreExecutionError",""],["RadixEngineWasmRuntime","A glue between system api (call frame and track abstraction) and WASM."],["ResolvedActor",""],["ResolvedReceiver","Resolved receiver including info whether receiver was derefed or not"],["ScryptoExecutor",""],["ScryptoInterpreter",""],["SubstateLock","A lock on a substate controlled by a call frame"],["SubstateProperties",""],["Track","Transaction-wide states and side effects"],["TrackReceipt",""],["VisibilityProperties",""]],"trait":[["BaseModule",""],["CanBeAbortion",""],["ExecutableInvocation",""],["Executor",""],["ResolverApi",""],["SelfError","This is a trait for the non-Downstream part of [`InvokeError`] We canâ€™t use `Into<RuntimeError>` because we need [`RuntimeError`] not to implement it."],["SystemApi",""],["VmApi",""]]};