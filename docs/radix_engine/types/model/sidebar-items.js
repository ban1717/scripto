window.SIDEBAR_ITEMS = {"constant":[["NON_FUNGIBLE_LOCAL_ID_MAX_LENGTH",""]],"enum":[["AccessControllerInvocation",""],["AccessRule",""],["AccessRuleEntry",""],["AccessRuleKey",""],["AccessRuleNode",""],["AccessRulesChainInvocation",""],["AuthZoneStackInvocation",""],["BucketInvocation",""],["CallTableInvocation",""],["ClockInvocation",""],["ComponentAddress","An instance of a blueprint, which lives in the ledger state."],["ComponentInvocation",""],["ContentValidationError",""],["EpochManagerInvocation",""],["IdentityInvocation",""],["Level","Represents the level of a log message."],["LoggerInvocation",""],["MetadataInvocation",""],["NativeInvocation",""],["NonFungibleIdType","Represents type of non-fungible id"],["NonFungibleLocalId","Represents the local id of a non-fungible."],["PackageAddress","A collection of blueprints, compiled and published as a single unit."],["PackageInvocation",""],["ParseNonFungibleGlobalIdError","Represents an error when parsing non-fungible address."],["ParseNonFungibleLocalIdError","Represents an error when decoding non-fungible id."],["ProofInvocation",""],["ProofRule","Resource Proof Rules"],["ProofValidationError","Represents an error when validating proof."],["ProofValidationMode","Specifies the validation mode that should be used for validating a `Proof`."],["Proposer","The set of roles allowed to propose recoveries. Only Primary and Recovery roles can initiate, or propose recoveries, Confirmation canâ€™t initiate nor propose."],["ResourceAddress","Represents a resource address."],["ResourceInvocation",""],["ResourceMethodAuthKey",""],["ResourceType","Represents the type of a resource."],["Role","An enum of the roles in the Access Controller component"],["ScryptoReceiver",""],["SoftCount",""],["SoftDecimal",""],["SoftResource",""],["SoftResourceOrNonFungible",""],["SoftResourceOrNonFungibleList",""],["TimePrecision",""],["TransactionRuntimeInvocation",""],["UpdateValidator",""],["ValidatorInvocation",""],["VaultInvocation",""],["VaultMethodAuthKey",""],["WorktopInvocation",""]],"fn":[["package_access_rules_from_owner_badge",""],["require",""],["require_all_of",""],["require_amount",""],["require_any_of",""],["require_n_of",""],["resource_access_rules_from_owner_badge",""]],"struct":[["AccessControllerCancelPrimaryRoleRecoveryProposalInvocation",""],["AccessControllerCancelPrimaryRoleRecoveryProposalMethodArgs",""],["AccessControllerCancelRecoveryRoleRecoveryProposalInvocation",""],["AccessControllerCancelRecoveryRoleRecoveryProposalMethodArgs",""],["AccessControllerCreateGlobalInvocation",""],["AccessControllerCreateProofInvocation",""],["AccessControllerCreateProofMethodArgs",""],["AccessControllerInitiateRecoveryAsPrimaryInvocation",""],["AccessControllerInitiateRecoveryAsPrimaryMethodArgs",""],["AccessControllerInitiateRecoveryAsRecoveryInvocation",""],["AccessControllerInitiateRecoveryAsRecoveryMethodArgs",""],["AccessControllerLockPrimaryRoleInvocation",""],["AccessControllerLockPrimaryRoleMethodArgs",""],["AccessControllerQuickConfirmPrimaryRoleRecoveryProposalInvocation",""],["AccessControllerQuickConfirmPrimaryRoleRecoveryProposalMethodArgs",""],["AccessControllerQuickConfirmRecoveryRoleRecoveryProposalInvocation",""],["AccessControllerQuickConfirmRecoveryRoleRecoveryProposalMethodArgs",""],["AccessControllerStopTimedRecoveryInvocation",""],["AccessControllerStopTimedRecoveryMethodArgs",""],["AccessControllerTimedConfirmRecoveryInvocation",""],["AccessControllerTimedConfirmRecoveryMethodArgs",""],["AccessControllerUnlockPrimaryRoleInvocation",""],["AccessControllerUnlockPrimaryRoleMethodArgs",""],["AccessRules","Method authorization rules for a component"],["AccessRulesAddAccessCheckInvocation",""],["AccessRulesGetLengthInvocation",""],["AccessRulesSetGroupAccessRuleInvocation",""],["AccessRulesSetGroupMutabilityInvocation",""],["AccessRulesSetMethodAccessRuleInvocation",""],["AccessRulesSetMethodMutabilityInvocation",""],["AuthZoneAssertAccessRuleInvocation",""],["AuthZoneClearInvocation",""],["AuthZoneCreateProofByAmountInvocation",""],["AuthZoneCreateProofByIdsInvocation",""],["AuthZoneCreateProofInvocation",""],["AuthZoneDrainInvocation",""],["AuthZonePopInvocation",""],["AuthZonePushInvocation",""],["Bucket",""],["BucketCreateProofInvocation",""],["BucketGetAmountInvocation",""],["BucketGetNonFungibleLocalIdsInvocation",""],["BucketGetResourceAddressInvocation",""],["BucketPutInvocation",""],["BucketTakeInvocation",""],["BucketTakeNonFungiblesInvocation",""],["BytesNonFungibleLocalId","Bytes, of length between 1 and 64."],["ClockCompareCurrentTimeInvocation",""],["ClockCompareCurrentTimeMethodArgs",""],["ClockCreateInvocation",""],["ClockGetCurrentTimeInvocation",""],["ClockGetCurrentTimeMethodArgs",""],["ClockSetCurrentTimeInvocation",""],["ClockSetCurrentTimeMethodArgs",""],["ComponentClaimRoyaltyInvocation",""],["ComponentGlobalizeInvocation",""],["ComponentGlobalizeWithOwnerInvocation",""],["ComponentSetRoyaltyConfigInvocation",""],["EpochManagerCreateInvocation",""],["EpochManagerCreateValidatorInvocation",""],["EpochManagerCreateValidatorMethodArgs",""],["EpochManagerGetCurrentEpochInvocation",""],["EpochManagerGetCurrentEpochMethodArgs",""],["EpochManagerNextRoundInvocation",""],["EpochManagerNextRoundMethodArgs",""],["EpochManagerSetEpochInvocation",""],["EpochManagerSetEpochMethodArgs",""],["EpochManagerUpdateValidatorInvocation",""],["EpochManagerUpdateValidatorMethodArgs",""],["IdentityCreateInvocation",""],["IntegerNonFungibleLocalId","Unsigned integers, up to u64."],["LoggerLogInvocation",""],["MetadataGetInvocation",""],["MetadataSetInvocation",""],["NonFungibleGlobalId","Represents the global id of a non-fungible."],["PackageClaimRoyaltyExecutable",""],["PackageClaimRoyaltyInvocation",""],["PackagePublishInvocation",""],["PackageSetRoyaltyConfigExecutable",""],["PackageSetRoyaltyConfigInvocation",""],["Proof",""],["ProofCloneInvocation",""],["ProofGetAmountInvocation",""],["ProofGetNonFungibleLocalIdsInvocation",""],["ProofGetResourceAddressInvocation",""],["RecoveryProposal",""],["ResourceManagerBucketBurnInvocation",""],["ResourceManagerBurnInvocation",""],["ResourceManagerCreateBucketInvocation",""],["ResourceManagerCreateFungibleInvocation",""],["ResourceManagerCreateFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateNonFungibleInvocation",""],["ResourceManagerCreateNonFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateUuidNonFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateVaultInvocation",""],["ResourceManagerGetNonFungibleInvocation",""],["ResourceManagerGetResourceTypeInvocation",""],["ResourceManagerGetTotalSupplyInvocation",""],["ResourceManagerMintFungibleInvocation",""],["ResourceManagerMintNonFungibleInvocation",""],["ResourceManagerMintUuidNonFungibleInvocation",""],["ResourceManagerNonFungibleExistsInvocation",""],["ResourceManagerSetVaultAuthMutabilityInvocation",""],["ResourceManagerUpdateNonFungibleDataInvocation",""],["ResourceManagerUpdateVaultAuthInvocation",""],["RoyaltyConfig","Royalty rules"],["RoyaltyConfigBuilder",""],["RuleSet","A struct with the set of rule associated with each role - used when creating a new access controller for the initial rules and also used during recovery for proposing a rule set."],["ScryptoInvocation","Scrypto function/method invocation."],["StringNonFungibleLocalId","A string matching `[_0-9a-zA-Z]{1,64}`."],["TransactionRuntimeGenerateUuidInvocation",""],["TransactionRuntimeGetHashInvocation",""],["UUIDNonFungibleLocalId","UUID, v4, variant 1, big endian. See https://www.rfc-editor.org/rfc/rfc4122"],["ValidatorClaimXrdInvocation",""],["ValidatorClaimXrdMethodArgs",""],["ValidatorInit",""],["ValidatorRegisterInvocation",""],["ValidatorRegisterMethodArgs",""],["ValidatorStakeInvocation",""],["ValidatorStakeMethodArgs",""],["ValidatorUnregisterInvocation",""],["ValidatorUnregisterValidatorMethodArgs",""],["ValidatorUnstakeInvocation",""],["ValidatorUnstakeMethodArgs",""],["ValidatorUpdateAcceptDelegatedStakeInvocation",""],["ValidatorUpdateAcceptDelegatedStakeMethodArgs",""],["ValidatorUpdateKeyInvocation",""],["ValidatorUpdateKeyMethodArgs",""],["VaultCreateProofByAmountInvocation",""],["VaultCreateProofByIdsInvocation",""],["VaultCreateProofInvocation",""],["VaultGetAmountInvocation",""],["VaultGetNonFungibleLocalIdsInvocation",""],["VaultGetResourceAddressInvocation",""],["VaultLockFeeInvocation",""],["VaultPutInvocation",""],["VaultRecallInvocation",""],["VaultRecallNonFungiblesInvocation",""],["VaultTakeInvocation",""],["VaultTakeNonFungiblesInvocation",""],["WorktopAssertContainsAmountInvocation",""],["WorktopAssertContainsInvocation",""],["WorktopAssertContainsNonFungiblesInvocation",""],["WorktopDrainInvocation",""],["WorktopPutInvocation",""],["WorktopTakeAllInvocation",""],["WorktopTakeAmountInvocation",""],["WorktopTakeNonFungiblesInvocation",""]],"trait":[["FromPublicKey",""],["IsNonAutoGeneratedNonFungibleLocalId","Marks the rust type that represents a non-fungible id, of non-auto-generated kind (i.e. String, Integer and Bytes)."],["IsNonFungibleLocalId","Marks the rust type that represents a non-fungible id, of any kind (i.e. String, Integer, Bytes and UUID)."],["NonFungibleData","Represents the data structure of a non-fungible."]]};