window.SIDEBAR_ITEMS = {"constant":[["ACCOUNT_BLUEPRINT",""],["ACCOUNT_PACKAGE","The address of the account package."],["BASIC_SBOR_V1_PAYLOAD_PREFIX",""],["CLOCK",""],["CUSTOM_VALUE_KIND_START","A custom type is an application defined type with special semantics."],["CUSTOM_WELL_KNOWN_TYPE_START",""],["DEFAULT_BASIC_MAX_DEPTH",""],["ECDSA_SECP256K1_TOKEN","The ECDSA virtual resource address."],["EDDSA_ED25519_TOKEN","The ED25519 virtual resource address."],["EPOCH_MANAGER",""],["FAUCET_BLUEPRINT",""],["FAUCET_COMPONENT","The address of the faucet component, test network only."],["FAUCET_PACKAGE","The address of the faucet package."],["NON_FUNGIBLE_LOCAL_ID_MAX_LENGTH",""],["OLYMPIA_VALIDATOR_TOKEN",""],["OPTION_VARIANT_NONE",""],["OPTION_VARIANT_SOME",""],["PACKAGE_TOKEN",""],["RADIX_TOKEN","The XRD resource address."],["RESULT_VARIANT_ERR",""],["RESULT_VARIANT_OK",""],["SYSTEM_TOKEN","The system token which allows access to system resources (e.g. setting epoch)"],["VALUE_KIND_ARRAY",""],["VALUE_KIND_BOOL",""],["VALUE_KIND_ENUM",""],["VALUE_KIND_I128",""],["VALUE_KIND_I16",""],["VALUE_KIND_I32",""],["VALUE_KIND_I64",""],["VALUE_KIND_I8",""],["VALUE_KIND_MAP",""],["VALUE_KIND_STRING",""],["VALUE_KIND_TUPLE",""],["VALUE_KIND_U128",""],["VALUE_KIND_U16",""],["VALUE_KIND_U32",""],["VALUE_KIND_U64",""],["VALUE_KIND_U8",""]],"derive":[["AsRefStr","Converts enum variants to `&'static str`."],["AsStaticStr",""],["Categorize","Derive code that returns the value kind."],["Decode","Derive code that decodes this data structure from a byte array."],["Describe","Derive code that describes the SBOR type."],["Display","Converts enum variants to strings."],["Encode","Derive code that encodes this data structure"],["EnumCount","Add a constant `usize` equal to the number of variants."],["EnumDiscriminants","Generate a new type with only the discriminant names."],["EnumIter","Creates a new type that iterates of the variants of an enum."],["EnumMessage","Add a verbose message to an enum variant."],["EnumProperty","Add custom properties to enum variants."],["EnumString","Converts strings to enum variants based on their name."],["EnumVariantNames","Implements `Strum::VariantNames` which adds an associated constant `VARIANTS` which is an array of discriminant names."],["FromRepr","Add a function to enum that allows accessing variants by its discriminant"],["IntoStaticStr","Implements `From<MyEnum> for &'static str` on an enum."],["LegacyDescribe","Derive code that describes this data structure."],["NonFungibleData","Derive code that describe a non-fungible data structure."],["Sbor","Derive code that implements `Categorize`, `Encode`, `Decode`, and `Describe` traits for this struct or enum."],["ScryptoCategorize","Derives code for categorizing a struct or enum with Scrypto value model."],["ScryptoDecode","Derives code for decoding a struct or enum with Scrypto value model."],["ScryptoDescribe","Derives code for describing a struct or enum with Scrypto schema."],["ScryptoEncode","Derives code for encoding a struct or enum with Scrypto value model."],["ScryptoSbor","Derive code that implements `ScryptoCategorize`, `ScryptoEncode`, `ScryptoDecode`, and `ScryptoDescribe` traits for this struct or enum."],["ToString","implements `std::string::ToString` on en enum"]],"enum":[["AccessControllerFn",""],["AccessControllerInvocation",""],["AccessControllerOffset",""],["AccessRule",""],["AccessRuleEntry",""],["AccessRuleKey",""],["AccessRuleNode",""],["AccessRulesChainFn",""],["AccessRulesChainInvocation",""],["AccessRulesChainOffset",""],["AddressError","Represents an error in addressing."],["AuthZoneStackFn",""],["AuthZoneStackInvocation",""],["AuthZoneStackOffset",""],["BucketFn",""],["BucketInvocation",""],["BucketOffset",""],["CallTableInvocation",""],["ChildNames",""],["ClockFn",""],["ClockInvocation",""],["ClockOffset",""],["ComponentAddress","An instance of a blueprint, which lives in the ledger state."],["ComponentFn",""],["ComponentInvocation",""],["ComponentOffset",""],["ContentValidationError",""],["DecodeError","Represents an error ocurred during decoding."],["EncodeError","Represents an error occurred during encoding."],["EpochManagerFn",""],["EpochManagerInvocation",""],["EpochManagerOffset",""],["FeeReserveOffset",""],["Fields","Represents the type info of struct fields."],["FnIdentifier",""],["GlobalAddress",""],["GlobalOffset",""],["GlobalTypeId","This is a global identifier for a type."],["IdentityFn",""],["IdentityInvocation",""],["KeyValueStoreOffset",""],["Level","Represents the level of a log message."],["LocalTypeIndex","This is the [`SchemaTypeLink`] used in a linearized [`Schema`] to link [`TypeKind`]s."],["LoggerFn",""],["LoggerInvocation",""],["LoggerOffset",""],["ManifestExpression",""],["MetadataFn",""],["MetadataInvocation",""],["MetadataOffset",""],["NativeFn",""],["NativeInvocation",""],["NativePackage",""],["NoCustomTypeExtension",""],["NoCustomTypeKind",""],["NoCustomTypeValidation",""],["NoCustomValue",""],["NoCustomValueKind",""],["NonFungibleIdType","Represents type of non-fungible id"],["NonFungibleLocalId","Represents the local id of a non-fungible."],["NonFungibleStoreOffset",""],["Own",""],["PackageAddress","A collection of blueprints, compiled and published as a single unit."],["PackageFn",""],["PackageIdentifier",""],["PackageInvocation",""],["PackageOffset",""],["ParseEcdsaSecp256k1PublicKeyError","Represents an error when parsing ECDSA public key from hex."],["ParseEcdsaSecp256k1SignatureError",""],["ParseEddsaEd25519PublicKeyError","Represents an error when parsing ED25519 public key from hex."],["ParseEddsaEd25519SignatureError",""],["ParseHashError","Represents an error when parsing hash."],["ParseManifestBlobRefError","Represents an error when parsing ManifestBlobRef."],["ParseManifestBucketError","Represents an error when parsing ManifestBucket."],["ParseManifestExpressionError","Represents an error when parsing ManifestExpression."],["ParseManifestProofError","Represents an error when parsing ManifestProof."],["ParseNonFungibleGlobalIdError","Represents an error when parsing non-fungible address."],["ParseNonFungibleLocalIdError","Represents an error when decoding non-fungible id."],["ParseOwnError",""],["ProofFn",""],["ProofInvocation",""],["ProofOffset",""],["ProofRule","Resource Proof Rules"],["ProofValidationError","Represents an error when validating proof."],["ProofValidationMode","Specifies the validation mode that should be used for validating a `Proof`."],["Proposer","The set of roles allowed to propose recoveries. Only Primary and Recovery roles can initiate, or propose recoveries, Confirmation can’t initiate nor propose."],["PublicKey","Represents any natively supported public key."],["RENodeId",""],["RENodeType",""],["Reference",""],["ResolveError",""],["ResourceAddress","Represents a resource address."],["ResourceInvocation",""],["ResourceManagerFn",""],["ResourceManagerOffset",""],["ResourceMethodAuthKey",""],["ResourceType","Represents the type of a resource."],["Role","An enum of the roles in the Access Controller component"],["RoundingMode","Defines how rounding should be done."],["ScryptoRENode",""],["ScryptoReceiver",""],["Signature","Represents any natively supported signature."],["SignatureWithPublicKey","Represents any natively supported signature, including public key."],["SoftCount",""],["SoftDecimal",""],["SoftResource",""],["SoftResourceOrNonFungible",""],["SoftResourceOrNonFungibleList",""],["SubstateOffset","Specifies a specific Substate into a given RENode"],["TimePrecision",""],["TransactionProcessorFn",""],["TransactionRuntimeFn",""],["TransactionRuntimeInvocation",""],["TransactionRuntimeOffset",""],["Type","Represents a SBOR type."],["TypeKind","A schema for the values that a codec can decode / views as valid"],["TypeValidation","Additional validation to apply to a payload of the given type, beyond validation from the [`TypeKind`]’s type structure."],["UpdateValidator",""],["ValidatorFn",""],["ValidatorInvocation",""],["ValidatorOffset",""],["Value","Y is the CustomValue type. This is likely an enum, capturing all the custom values for the particular SBOR extension."],["ValueKind",""],["VaultFn",""],["VaultInvocation",""],["VaultMethodAuthKey",""],["VaultOffset",""],["WorktopFn",""],["WorktopInvocation",""],["WorktopOffset",""]],"fn":[["basic_decode","Decode an instance of `T` from a slice."],["basic_encode","Encode a `T` into byte array."],["generate_full_schema",""],["generate_full_schema_from_single_type",""],["hash","Computes the hash digest of a message."],["package_access_rules_from_owner_badge",""],["require",""],["require_all_of",""],["require_amount",""],["require_any_of",""],["require_n_of",""],["resolve_local_type_ref",""],["resolve_well_known_type",""],["resource_access_rules_from_owner_badge",""],["scrypto_decode","Decodes a data structure from a byte array."],["scrypto_encode","Encodes a data structure into byte array."],["sha256","Computes the SHA-256 digest of a message."],["sha256_twice","Computes the double SHA-256 digest of a message."],["sha3","Computes the SHA3 digest of a message."],["traverse_any",""]],"macro":[["Debug","Derive macro generating an impl of the trait `Debug`."],["access_and_or",""],["access_rule_node",""],["address",""],["args","Constructs argument list for Scrypto function/method invocation."],["btreemap",""],["btreeset",""],["construct_address","Constructs an address."],["count",""],["dec","Creates a `Decimal` from literals."],["format","Creates a `String` using interpolation of runtime expressions."],["hashmap",""],["hashset",""],["i","Creates a safe integer from literals. You must specify the type of the integer you want to create."],["pdec","Creates a `PreciseDecimal` from literals."],["rule",""],["scrypto_type","A macro for implementing sbor traits (for statically sized types)."],["test_add_all",""],["test_from_all_types_builtin_safe",""],["test_from_all_types_safe_builtin",""],["test_from_all_types_safe_safe",""],["test_from_builtin",""],["test_impl",""],["test_math",""],["test_signed",""],["test_unsigned",""],["vec","Creates a `Vec` containing the arguments."]],"mod":[["abi","RE Scrypto ABI."],["additional_attributes","Documentation for Additional Attributes"],["address","RE addresses."],["api","RE APIs"],["basic","SBOR basic, no custom types"],["btree_map",""],["btree_set",""],["categorize","SBOR Categorize trait"],["codec","SBOR codec for core Rust types."],["constants","SBOR constants"],["crypto","RE crypto library"],["data","RE data model."],["decode","SBOR decode trait."],["decoder","SBOR decoding."],["encode","SBOR encode trait."],["encoder","SBOR encoding."],["fmt","Utilities for formatting and printing `String`s."],["hash_map",""],["hash_set",""],["math","RE math library."],["model","RE node models."],["modules",""],["node",""],["path","SBOR paths."],["ptr","Manually manage memory through raw pointers."],["rust","A facade of Rust types."],["schema","SBOR Schema"],["time","RE time library."],["value","SBOR value model and any decoding/encoding."],["value_kind","SBOR value kinds - ie the types of value that are supported."],["vec","A contiguous growable array type with heap-allocated contents, written `Vec<T>`."]],"struct":[["AccessControllerCancelPrimaryRoleRecoveryProposalInvocation",""],["AccessControllerCancelPrimaryRoleRecoveryProposalMethodArgs",""],["AccessControllerCancelRecoveryRoleRecoveryProposalInvocation",""],["AccessControllerCancelRecoveryRoleRecoveryProposalMethodArgs",""],["AccessControllerCreateGlobalInvocation",""],["AccessControllerCreateProofInvocation",""],["AccessControllerCreateProofMethodArgs",""],["AccessControllerInitiateRecoveryAsPrimaryInvocation",""],["AccessControllerInitiateRecoveryAsPrimaryMethodArgs",""],["AccessControllerInitiateRecoveryAsRecoveryInvocation",""],["AccessControllerInitiateRecoveryAsRecoveryMethodArgs",""],["AccessControllerLockPrimaryRoleInvocation",""],["AccessControllerLockPrimaryRoleMethodArgs",""],["AccessControllerPackage",""],["AccessControllerQuickConfirmPrimaryRoleRecoveryProposalInvocation",""],["AccessControllerQuickConfirmPrimaryRoleRecoveryProposalMethodArgs",""],["AccessControllerQuickConfirmRecoveryRoleRecoveryProposalInvocation",""],["AccessControllerQuickConfirmRecoveryRoleRecoveryProposalMethodArgs",""],["AccessControllerStopTimedRecoveryInvocation",""],["AccessControllerStopTimedRecoveryMethodArgs",""],["AccessControllerTimedConfirmRecoveryInvocation",""],["AccessControllerTimedConfirmRecoveryMethodArgs",""],["AccessControllerUnlockPrimaryRoleInvocation",""],["AccessControllerUnlockPrimaryRoleMethodArgs",""],["AccessRules","Method authorization rules for a component"],["AccessRulesAddAccessCheckInvocation",""],["AccessRulesGetLengthInvocation",""],["AccessRulesSetGroupAccessRuleInvocation",""],["AccessRulesSetGroupMutabilityInvocation",""],["AccessRulesSetMethodAccessRuleInvocation",""],["AccessRulesSetMethodMutabilityInvocation",""],["AuthZoneAssertAccessRuleInvocation",""],["AuthZoneClearInvocation",""],["AuthZoneCreateProofByAmountInvocation",""],["AuthZoneCreateProofByIdsInvocation",""],["AuthZoneCreateProofInvocation",""],["AuthZoneDrainInvocation",""],["AuthZonePopInvocation",""],["AuthZonePushInvocation",""],["BTreeMap","An ordered map based on a B-Tree."],["BTreeSet","An ordered set based on a B-Tree."],["Bech32Decoder","Represents a decoder which understands how to decode Scrypto addresses in Bech32."],["Bech32Encoder","Represents an encoder which understands how to encode Scrypto addresses in Bech32."],["BlueprintAbi","Represents the ABI of a blueprint."],["BnumI256","Provides safe integer arithmetic."],["Box","A pointer type that uniquely owns a heap allocation of type `T`."],["Bucket",""],["BucketCreateProofInvocation",""],["BucketGetAmountInvocation",""],["BucketGetNonFungibleLocalIdsInvocation",""],["BucketGetResourceAddressInvocation",""],["BucketPutInvocation",""],["BucketTakeInvocation",""],["BucketTakeNonFungiblesInvocation",""],["BytesNonFungibleLocalId","Bytes, of length between 1 and 64."],["ClockCompareCurrentTimeInvocation",""],["ClockCompareCurrentTimeMethodArgs",""],["ClockCreateInvocation",""],["ClockGetCurrentTimeInvocation",""],["ClockGetCurrentTimeMethodArgs",""],["ClockPackage",""],["ClockSetCurrentTimeInvocation",""],["ClockSetCurrentTimeMethodArgs",""],["ComponentClaimRoyaltyInvocation",""],["ComponentGlobalizeInvocation",""],["ComponentGlobalizeWithOwnerInvocation",""],["ComponentSetRoyaltyConfigInvocation",""],["Decimal","`Decimal` represents a 256 bit representation of a fixed-scale decimal number."],["Drain","A draining iterator for `String`."],["EcdsaSecp256k1PublicKey","Represents an ECDSA public key."],["EcdsaSecp256k1Signature","Represents an ECDSA signature."],["EcdsaSecp256k1Verifier","EcdsaSecp256k1 signature verifier."],["EddsaEd25519PublicKey","Represents an ED25519 public key."],["EddsaEd25519Signature","Represents an ED25519 signature."],["EddsaEd25519Verifier","EddsaEd25519 signature verifier."],["EpochManagerCreateInvocation",""],["EpochManagerCreateValidatorInvocation",""],["EpochManagerCreateValidatorMethodArgs",""],["EpochManagerGetCurrentEpochInvocation",""],["EpochManagerGetCurrentEpochMethodArgs",""],["EpochManagerNextRoundInvocation",""],["EpochManagerNextRoundMethodArgs",""],["EpochManagerPackage",""],["EpochManagerSetEpochInvocation",""],["EpochManagerSetEpochMethodArgs",""],["EpochManagerUpdateValidatorInvocation",""],["EpochManagerUpdateValidatorMethodArgs",""],["Fn","Represents a method/function."],["FromUtf16Error","A possible error value when converting a `String` from a UTF-16 byte slice."],["FromUtf8Error","A possible error value when converting a `String` from a UTF-8 byte vector."],["Hash","Represents a 32-byte hash digest."],["HashMap","A hash map implemented with quadratic probing and SIMD lookup."],["HashSet","A hash set implemented as a `HashMap` where the value is `()`."],["IdentityCreateInvocation",""],["IndexedScryptoValue",""],["IntegerNonFungibleLocalId","Unsigned integers, up to u64."],["LengthValidation","Represents additional validation that should be performed on the size."],["LoggerLogInvocation",""],["ManifestBlobRef",""],["ManifestBucket",""],["ManifestProof",""],["MetadataGetInvocation",""],["MetadataSetInvocation",""],["NonFungibleGlobalId","Represents the global id of a non-fungible."],["NonZeroU32","An integer that is known not to equal zero."],["NonZeroUsize","An integer that is known not to equal zero."],["NovelTypeMetadata","This is the struct used in the Schema"],["NumericValidation","Represents additional validation that should be performed on the numeric value."],["PackageClaimRoyaltyExecutable",""],["PackageClaimRoyaltyInvocation",""],["PackagePublishInvocation",""],["PackageSetRoyaltyConfigExecutable",""],["PackageSetRoyaltyConfigInvocation",""],["PhantomData","Zero-sized type used to mark things that “act like” they own a `T`."],["Proof",""],["ProofCloneInvocation",""],["ProofGetAmountInvocation",""],["ProofGetNonFungibleLocalIdsInvocation",""],["ProofGetResourceAddressInvocation",""],["Rc","A single-threaded reference-counting pointer. ‘Rc’ stands for ‘Reference Counted’."],["RecoveryProposal",""],["Ref","Wraps a borrowed reference to a value in a `RefCell` box. A wrapper type for an immutably borrowed value from a `RefCell<T>`."],["RefCell","A mutable memory location with dynamically checked borrow rules"],["RefMut","A wrapper type for a mutably borrowed value from a `RefCell<T>`."],["ResolvedTypeData",""],["ResourceManagerBucketBurnInvocation",""],["ResourceManagerBurnInvocation",""],["ResourceManagerCreateBucketInvocation",""],["ResourceManagerCreateFungibleInvocation",""],["ResourceManagerCreateFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateNonFungibleInvocation",""],["ResourceManagerCreateNonFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateUuidNonFungibleWithInitialSupplyInvocation",""],["ResourceManagerCreateVaultInvocation",""],["ResourceManagerGetNonFungibleInvocation",""],["ResourceManagerGetResourceTypeInvocation",""],["ResourceManagerGetTotalSupplyInvocation",""],["ResourceManagerMintFungibleInvocation",""],["ResourceManagerMintNonFungibleInvocation",""],["ResourceManagerMintUuidNonFungibleInvocation",""],["ResourceManagerNonFungibleExistsInvocation",""],["ResourceManagerSetVaultAuthMutabilityInvocation",""],["ResourceManagerUpdateNonFungibleDataInvocation",""],["ResourceManagerUpdateVaultAuthInvocation",""],["RoyaltyConfig","Royalty rules"],["RoyaltyConfigBuilder",""],["RuleSet","A struct with the set of rule associated with each role - used when creating a new access controller for the initial rules and also used during recovery for proposing a rule set."],["SborPath","A series of indexes which describes some value in the sbor tree"],["SborPathBuf",""],["Schema","An array of custom type kinds, and associated extra information which can attach to the type kinds"],["ScryptoFnIdentifier",""],["ScryptoInvocation","Scrypto function/method invocation."],["String","A UTF-8–encoded, growable string."],["StringNonFungibleLocalId","A string matching `[_0-9a-zA-Z]{1,64}`."],["SubstateId","TODO: separate space addresses?"],["TransactionRuntimeGenerateUuidInvocation",""],["TransactionRuntimeGetHashInvocation",""],["TypeAggregator",""],["TypeData","Combines all data about a Type:"],["TypeMetadata","This enables the type to be represented as eg JSON Also used to facilitate type reconstruction"],["UUIDNonFungibleLocalId","UUID, v4, variant 1, big endian. See https://www.rfc-editor.org/rfc/rfc4122"],["ValidatorClaimXrdInvocation",""],["ValidatorClaimXrdMethodArgs",""],["ValidatorInit",""],["ValidatorRegisterInvocation",""],["ValidatorRegisterMethodArgs",""],["ValidatorStakeInvocation",""],["ValidatorStakeMethodArgs",""],["ValidatorUnregisterInvocation",""],["ValidatorUnregisterValidatorMethodArgs",""],["ValidatorUnstakeInvocation",""],["ValidatorUnstakeMethodArgs",""],["ValidatorUpdateAcceptDelegatedStakeInvocation",""],["ValidatorUpdateAcceptDelegatedStakeMethodArgs",""],["ValidatorUpdateKeyInvocation",""],["ValidatorUpdateKeyMethodArgs",""],["Variant","Represents the type info of an enum variant."],["VaultCreateProofByAmountInvocation",""],["VaultCreateProofByIdsInvocation",""],["VaultCreateProofInvocation",""],["VaultGetAmountInvocation",""],["VaultGetNonFungibleLocalIdsInvocation",""],["VaultGetResourceAddressInvocation",""],["VaultLockFeeInvocation",""],["VaultPutInvocation",""],["VaultRecallInvocation",""],["VaultRecallNonFungiblesInvocation",""],["VaultTakeInvocation",""],["VaultTakeNonFungiblesInvocation",""],["Vec","A contiguous growable array type, written as `Vec<T>`, short for ‘vector’."],["VecDecoder","A `Decoder` abstracts the logic for decoding basic types."],["VecEncoder","An `Encoder` abstracts the logic for writing core types into a byte buffer."],["WorktopAssertContainsAmountInvocation",""],["WorktopAssertContainsInvocation",""],["WorktopAssertContainsNonFungiblesInvocation",""],["WorktopDrainInvocation",""],["WorktopPutInvocation",""],["WorktopTakeAllInvocation",""],["WorktopTakeAmountInvocation",""],["WorktopTakeNonFungiblesInvocation",""]],"trait":[["AddAssign","The addition assignment operator `+=`."],["AsStaticRef","A cheap reference-to-reference conversion. Used to convert a value to a reference value with `'static` lifetime within generic code."],["BasicCategorize",""],["BasicDecode",""],["BasicEncode",""],["Categorize","The `Categorize` trait marks a rust type as having a fixed value kind for SBOR encoding/decoding."],["CustomTypeExtension",""],["CustomTypeKind",""],["CustomTypeValidation",""],["CustomValueKind",""],["Debug","`?` formatting."],["Decode","A data structure that can be decoded from a byte array using SBOR."],["Decoder",""],["Describe","The `Describe` trait allows a type to describe how to interpret and validate a corresponding SBOR payload."],["Encode","A data structure that can be serialized into a byte array using SBOR."],["Encoder",""],["EnumCount","A trait for capturing the number of variants in Enum. This trait can be autoderived by `strum_macros`."],["EnumMessage","Associates additional pieces of information with an Enum. This can be autoimplemented by deriving `EnumMessage` and annotating your variants with `#[strum(message=\"...\")]`."],["EnumProperty","`EnumProperty` is a trait that makes it possible to store additional information with enum variants. This trait is designed to be used with the macro of the same name in the `strum_macros` crate. Currently, the only string literals are supported in attributes, the other methods will be implemented as additional attribute types become stabilized."],["FromPublicKey",""],["FromStr","Parse a value from a string"],["IntoEnumIterator","This trait designates that an `Enum` can be iterated over. It can be auto generated using `strum_macros` on your behalf."],["IsNonAutoGeneratedNonFungibleLocalId","Marks the rust type that represents a non-fungible id, of non-auto-generated kind (i.e. String, Integer and Bytes)."],["IsNonFungibleLocalId","Marks the rust type that represents a non-fungible id, of any kind (i.e. String, Integer, Bytes and UUID)."],["NonFungibleData","Represents the data structure of a non-fungible."],["SchemaTypeLink","Marker trait for a link between [`TypeKind`]s:"],["ScryptoCategorize",""],["ScryptoDecode",""],["ScryptoEncode",""],["ToOwned","A generalization of `Clone` to borrowed data."],["ToString","A trait for converting a value to a `String`."],["ValueVisitor",""],["VariantNames","A trait for retrieving the names of each variant in Enum. This trait can be autoderived by `strum_macros`."]],"type":[["AccessControllerId",""],["AuthZoneStackId",""],["BasicDecoder",""],["BasicEncoder",""],["BasicSchema",""],["BasicTypeKind",""],["BasicValue",""],["BasicValueKind",""],["BucketId",""],["ClockId",""],["ComponentId",""],["EpochManagerId",""],["FeeReserveId",""],["IdentityId",""],["KeyValueStoreId",""],["LockHandle",""],["NonFungibleStoreId",""],["PackageId",""],["ProofId",""],["ResourceManagerId",""],["TransactionRuntimeId",""],["TypeHash",""],["ValidatorId",""],["VaultId",""]]};